{"version":3,"sources":["Todo.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","List","className","ListItemAvatar","ListItem","ListItemText","primary","todo","secondary","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todos","setTodos","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","FormControl","InputLabel","Input","value","onChange","event","target","Button","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAuBeA,MAdf,SAAcC,GACZ,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,UAAU,aAAhB,UACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,QAASN,EAAMO,KAAMC,UAAU,uC,QCDxCC,EAZKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YCuDRC,MA5Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAuBA,OAnBAC,qBAAU,WACRjB,EAAGkB,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXP,EAASO,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,OAAO3B,cAElD,IAcD,sBAAKL,UAAU,MAAf,UACE,0DACA,iCACE,eAACiC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wCACA,cAACC,EAAA,EAAD,CACEC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAWf,EAASe,EAAMC,OAAOH,aAG/C,cAACI,EAAA,EAAD,CACEC,KAAK,SACLC,QAxBQ,SAACJ,GAEfA,EAAMK,iBACNpC,EAAGkB,WAAW,SAASmB,IAAI,CACzBvC,KAAMiB,EACNuB,UAAWrC,IAASS,UAAU6B,WAAWC,oBAG3CxB,EAAS,KAiBHyB,QAAQ,YACRC,MAAM,UACNC,UAAW5B,EALb,yBAcF,6BACGF,EAAMU,KAAI,SAACzB,GAAD,OACT,cAAC,EAAD,CAAMA,KAAMA,aC/CP8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88a62994.chunk.js","sourcesContent":["import {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nfunction Todo(props) {\r\n  return (\r\n    <div>\r\n      <List className=\"todo__list\">\r\n        <ListItemAvatar></ListItemAvatar>\r\n        <ListItem>\r\n          <ListItemText primary={props.todo} secondary=\"Dummy DeadLineüò¢\" />\r\n        </ListItem>\r\n      </List>\r\n      {/* <li>{props.todo}</li> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDUHTKfyCNdLbPRzcRlAS6zTtSSbQdgBns\",\r\n  authDomain: \"todo-app-cp-6618a.firebaseapp.com\",\r\n  projectId: \"todo-app-cp-6618a\",\r\n  storageBucket: \"todo-app-cp-6618a.appspot.com\",\r\n  messagingSenderId: \"681202767865\",\r\n  appId: \"1:681202767865:web:965c7aa759f43647ef0f28\",\r\n  measurementId: \"G-M2LPVT5LZ7\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport Todo from \"./Todo\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  // when the app loads and listen to database and fetch todos\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(snapshot.docs.map((doc) => doc.data().todo));\n      });\n  }, []);\n\n  const addTodo = (event) => {\n    //fire off when click button\n    event.preventDefault(); //will stop reloding page\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    // setTodos([...todos, input]);\n    setInput(\"\"); //clear after input\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello WorldüöÄ!</h1>\n      <form>\n        <FormControl>\n          <InputLabel>‚òëÔ∏è Write A Todo</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </FormControl>\n        <Button\n          type=\"submit\"\n          onClick={addTodo}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!input}\n        >\n          Add Todo\n        </Button>\n        {/* <button >\n          \n        </button> */}\n      </form>\n\n      <ul>\n        {todos.map((todo) => (\n          <Todo todo={todo} />\n          // <li>{todo}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}